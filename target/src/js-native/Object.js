// Generated by CoffeeScript 1.8.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __slice = [].slice;

  Object.defineProperty(Object.prototype, 'str', {
    enumerable: false,
    writable: true,
    value: function() {
      return this.toString();
    }
  });

  Object.defineProperty(Object.prototype, 'json_Str', {
    enumerable: false,
    writable: true,
    value: function() {
      try {
        return JSON.stringify(this);
      } catch (_error) {
        return '';
      }
    }
  });

  Object.defineProperty(Object.prototype, 'json_Pretty', {
    enumerable: false,
    writable: true,
    value: function() {
      try {
        return JSON.stringify(this, null, '  ');
      } catch (_error) {
        return '';
      }
    }
  });

  Object.defineProperty(Object.prototype, 'json_pretty', {
    enumerable: false,
    writable: true,
    value: Object.prototype.json_Pretty
  });

  Object.defineProperty(Object.prototype, 'json_Inspect', {
    enumerable: false,
    writable: true,
    value: function() {
      return require('util').inspect(this);
    }
  });

  Object.defineProperty(Object.prototype, 'json_inspect', {
    enumerable: false,
    writable: true,
    value: Object.prototype.json_Inspect
  });

  Object.defineProperty(Object.prototype, 'keys', {
    enumerable: false,
    writable: true,
    value: function() {
      var key;
      return (function() {
        var _results;
        _results = [];
        for (key in this) {
          if (!__hasProp.call(this, key)) continue;
          _results.push(key);
        }
        return _results;
      }).call(this);
    }
  });

  Object.defineProperty(Object.prototype, 'keys_All', {
    enumerable: false,
    writable: true,
    value: function() {
      var key;
      return (function() {
        var _results;
        _results = [];
        for (key in this) {
          _results.push(key);
        }
        return _results;
      }).call(this);
    }
  });

  Object.defineProperty(Object.prototype, 'values', {
    enumerable: false,
    writable: true,
    value: function() {
      var key;
      return (function() {
        var _results;
        _results = [];
        for (key in this) {
          if (!__hasProp.call(this, key)) continue;
          _results.push(this[key]);
        }
        return _results;
      }).call(this);
    }
  });

  Object.defineProperty(Object.prototype, 'call_Function', {
    enumerable: false,
    writable: true,
    value: function() {
      var callParams, method, param, params, _i, _len;
      method = arguments[0], params = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      callParams = [this];
      for (_i = 0, _len = params.length; _i < _len; _i++) {
        param = params[_i];
        callParams.push(param);
      }
      return method.apply(null, callParams);
    }
  });

  Object.defineProperty(Object.prototype, 'load_Json', {
    enumerable: false,
    writable: true,
    value: function() {
      try {
        return JSON.parse(this.file_Contents());
      } catch (_error) {
        return {};
      }
    }
  });

  Object.defineProperty(Object.prototype, 'save_Json', {
    enumerable: false,
    writable: true,
    value: function(target) {
      var data;
      data = JSON.stringify(this, null, '  ');
      return data.saveAs(target);
    }
  });

  Object.defineProperty(Object.prototype, 'repl_Me', {
    enumerable: false,
    writable: true,
    value: function(onExit) {
      var repl, replServer;
      repl = require('repl');
      replServer = repl.start({
        prompt: '[fluentnode] repl> '
      });
      replServer.context.that = this;
      replServer.context.replServer = replServer;
      replServer.on('exit', function() {
        return onExit();
      });
      return replServer;
    }
  });

}).call(this);
